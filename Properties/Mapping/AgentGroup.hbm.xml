<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping auto-import="true" 
                   xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
                   xmlns="urn:nhibernate-mapping-2.2"> 

  <class name="Netgao.Telephony.Workflow.Domain.AgentGroup, Netgao.Telephony.Workflow" 
         table="Telephony_AgentGroups" lazy="false">

    <id name="Id" access="property" column="ID" type="Int32">
      <generator class="native" />
    </id>

    <property name="Name" access="property" type="String">
      <column name="NAME" length="255"  not-null="true" />
    </property>

    <property name="Value" access="property" type="Int32">
      <column name="VALUE" length="32" not-null="true" unique="true" />
    </property>

    <property name="IsActive" access="property" type="Boolean">
      <column name="IS_ACTIVE" />
    </property>

    <component name="Agents" access="property" class="Netgao.Telephony.Workflow.Domain.AgentCollection, Netgao.Telephony.Workflow">
      <bag name="items" access="field" table="Telephony_AgentsInGroups" generic="true" cascade="none" lazy="true">
        <key column="GROUP_ID" />
        <many-to-many class="Netgao.Telephony.Workflow.Domain.Agent, Netgao.Telephony.Workflow" column="AGENT_ID" />
      </bag>
    </component>

  </class>

  <sql-query name="AcitiveAgentGroups">
    <return alias="group" class="Netgao.Telephony.Workflow.Domain.AgentGroup, Netgao.Telephony.Workflow" />
    <query-param name="AgentId" type="Int32" />
    <![CDATA[
    select a.NAME as {group.Name}, a.VALUE as {group.Value}, a.IS_ACTIVE as {group.IsActive}
    from Telephony_AgentGroups a, Telephony_AgentsInGroups b 
    where a.ID=b.GROUP_ID and b.Article_ID = :AgentId and a.IS_ACTIVE
    ]]>
  </sql-query>


</hibernate-mapping>
